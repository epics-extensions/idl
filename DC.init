;  DC.init (R2.2)

  widget_ids = {                  $ 
      base        : MAIN13_1,     $
      menubar_base: BASE68,       $
      status_base : BASE69,       $
      plot_base   : BASE61, $
      axis_base   : BASE144,      $
      menusetup_base: SETUPOPTIONSMENU, $
      menuplot_base: PLOTOPTIONSMENU, $
      file	  : PDMENU127,    $
      trashcan    : CATCHER_FILE,    $
;      viewdata    : PDMENU_VDATA,  $
      pv_stat     : FIELD141,     $
      rept_base   : BASE140,      $
      wf_select   : BGROUP145,    $
      plot_wid    : DRAW61,       $
      plot_area   : DRAW61_Id,    $
      panwin      : -1,    $
      summary_base: 0L,      $
      terminal    : 0L,    $
      statistic   : 0L    $
  }

if n_elements(w_plotspec_id) eq 0 then $
w_plotspec_id = { $
	color : 1, $     ;  0 no color curve, 1 color curve 
        type:   0, $
	solid: 1, $ 		; 1 solid line only
        log:    0, $   ; 0 - linear, 1 - log, 2 - linear, y>0
        grid:   0, $
        mode:   1, $		; default is viewing mode
        x_axis_u :   0, $
        autosave:       0, $
	scan: 0,$
        errbars: 0, $
	opened: 0, $
	realtime: 1, $
	itime: 1, $
	dtime: 0.2, $
        xcord: 0, $
	seqno: 0, $
	statistic: 0, $
	xticklen: 0.04, $
	yticklen: 0.02, $
	gridstyle: 0, $
	colorI: make_array(89,/INT,value=!d.n_colors-2) $ 
        }

if !d.name eq 'X' then device,bypass_translation=0
   loadct,39
   plotoption_setcolor		; init color index array

   scanData  =  {                 $
dim: 0, $   ; dimension
debug : 0,    $   ;  0 normal runing mode, 1 debug mode
option : 0, $    ; 0 ->view mode only, 1 ->scan/view both allowed
nosave: 0, $   ; 0 autosave on, 1 no automatic save used by command line
      version     : 'IOC_DC', $
      release     : '(DC R2.2)', $
      dataversion : '', 	  $  new field in R1.5.5.0
      pv          : '',           $
      pvconfig    : '',           $
      pvfound     : -1, 	  $  indicator for pv found or not found
      num_pos	  : 4, 		  $  max no of pos allowed   
      num_det     : 85, 	  $  max no of detectors allowed 
      lastDet     : [85,1,1],           $  initial last detector
      home	  : '', $
      fileno	  : 0, 		  $  current scan file number
      filemax	  : 1, 		  $  max scan file number
      envfile	  : 'catch1d.env', $
      maxenv 	  : 500, $
      config      : 'DC.config', $
      imgfile	  : 'DCV2D.image.xdr', $
      path  	  : '', $
      outpath     : '', $
      trashcan    : 'Undefined', $
      code        : 'G', $
      format      : '18.8', $
      req_npts    : 100,          $
      act_npts    : 0,          $
      readin_npts    : 0,          $
	wf_sel	   : make_array(89,/int), $
	detname	   : detname, $
      	px         : FLTARR(4000), $
      	dx         : make_array(4000,/double), $
	pa : Make_array(4000,4,/double), $
	da : FLTARR(4000,85), $	
      lastPlot    : 1,   $   ; <0 not plot data, 0 userscale, 1 autoscale 
      scanno	  : 0,            $   ; current plot no 
      startno	  : 0,            $   ; start no when catch1d is brought up
      refno       : 0,            $   ; environments ref no saved in data   
      showlist	  : 0,            $   ; list life scan data ?
      readpv      : 0, 		    $     ; if 1 read from scan_pvnames 
      pvfile	  : 'scan_pvnames', $     ; list of monitor pvnames 
      nonames	  : 0, $
      plotspec    : w_plotspec_id, $
      realtime    : 0, 	  	  $   ; realtime scan monitor indicator 
; add 2D scan parameters here
      scanno_2d	  : 0,            $   ; current 2D scan no 
      image        : 1, $		; default 60x60 image 
      image_width  : 60, $
      image_height : 60, $
	sel_list   : intarr(85), $	; panimage sublist
	sel_id 	   : 0, $		; panimage sublist
	sublist    : ['D01-D10','D11-20','D21-D30','D31-D40','D41-D50','D51-D60','D61-D70','D1-DF','ALL'], $    
      y_pv	: '', $
      y_scan 	: 0, $		; if 1 2D scan is goring on
      y_value   : 0., $		; y value for 2D scan
      y_req_npts    : 1,          $
      y_act_npts    : 0,          $
      x_dpt 	: make_array(85,/INT,value=1), $ ; data dim for X detectors
      y_dpt 	: make_array(85,/INT,value=1), $ ; data dim for Y detectors
      x_dtype 	: make_array(85,/INT,value=4), $ ; float for X detectors 
      y_dtype 	: make_array(85,/INT,value=4), $ ; float for Y detectors
      y_cur_pt  : 0, 	$  ; y index no from IOC
      y_seqno   : 0 	$  ; y dim scan seqno
   }

   WIDGET_CONTROL, widget_ids.wf_select, SET_VALUE = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1]

   WIDGET_CONTROL, widget_ids.wf_select, GET_VALUE = wf_sel
   scanData.wf_sel = wf_sel

; init w_plotspec

if n_elements(w_plotspec_array) eq 0 then $
w_plotspec_saved = make_array(6,/string,value=string(replicate(32b,60)))

if n_elements(w_plotspec_array) eq 0 then $
w_plotspec_array = make_array(6,/string,value=string(replicate(32b,60)))
w_plotspec_array(3) = ''

if n_elements(w_plotspec_limits) eq 0 then $
w_plotspec_limits = make_array(4,/float)
	w_plotspec_limits = [0., 100., 0., 100.]

; init w_viewscan

if n_elements(w_viewscan_id) eq 0 then $
w_viewscan_id = { $
	file: '', $
        type: 0, $
        unit: 0, $
        seqno: 0, $
        maxno: 0 $
;	size: 0L, $
;        fptr: make_array(10000,/long) $
        }

; realtime init

if n_elements(realtime_id) eq 0 then $
realtime_id = { $
        ind     : 0,    $
        no      : 0, $
        mpts    : 0, $
	def     : make_array(89,/int), $     ; 1 PV defined, 2 time defined
	axis 	: 0, $
	xmin	: 0., $
	xmax	: 0., $
	ymin	: 0., $
	ymax	: 0. $
	}

; scan field init

if n_elements(field_name) eq 0 then begin

x1 = [ $
        'NPTS Number of Points               : ', $
        'P1PV Positioner # 1 PV Name         : ', $
        'R1PV Readback   # 1 PV Name         : ', $
        'P1SM Positioner # 1 Step Mode       : ', $
        'P2PV Positioner # 2 PV Name         : ', $
        'R2PV Readback   # 2 PV Name         : ', $
        'P1SM Positioner # 2 Step Mode       : ', $
        'P3PV Positioner # 3 PV Name         : ', $
        'R3PV Readback   # 3 PV Name         : ', $
        'P3SM Positioner # 3 Step Mode       : ', $
        'P4PV Positioner # 4 PV Name         : ', $
        'R4PV Readback   # 4 PV Name         : ', $
        'P4SM Positioner # 4 Step Mode       : ', $
        'D1PV Data Detector # 1 PV Name      : ', $
        'D2PV Data Detector # 2 PV Name      : ', $
        'D3PV Data Detector # 3 PV Name      : ', $
        'D4PV Data Detector # 4 PV Name      : ', $
        'D5PV Data Detector # 5 PV Name      : ', $
        'D6PV Data Detector # 6 PV Name      : ', $
        'D7PV Data Detector # 7 PV Name      : ', $
        'D8PV Data Detector # 8 PV Name      : ', $
        'D9PV Data Detector # 9 PV Name      : ', $
        'DAPV Data Detector # A PV Name      : ', $
        'DBPV Data Detector # B PV Name      : ', $
        'DCPV Data Detector # C PV Name      : ', $
        'DDPV Data Detector # D PV Name      : ', $
        'DEPV Data Detector # E PV Name      : ', $
        'DFPV Data Detector # F PV Name      : ', $
        'T1PV Trigger # 1 PV Name            : ', $
        'T1CD Trigger # 1 Command            : ', $
        'T2PV Trigger # 2 PV Name            : ', $
        'T2CD Trigger # 2 Command            : ' $
	]

y1 = [ $
        '.NPTS', $
        '.P1PV', '.R1PV', '.P1SM', $
        '.P2PV', '.R2PV', '.P2SM', $
        '.P3PV', '.R3PV', '.P3SM', $
        '.P4PV', '.R4PV', '.P4SM', $
        '.D1PV', '.D2PV', '.D3PV', '.D4PV', '.D5PV', '.D6PV', '.D7PV', $
        '.D8PV', '.D9PV', '.DAPV', '.DBPV', '.DCPV', '.DDPV', '.DEPV', $
        '.DFPV', '.T1PV', '.T1CD', '.T2PV', '.T2CD' $
        ]

field_name = y1
field_max = n_elements(field_name)
field_label_array = x1
 
field_name_array = make_array(field_max,/string,value=string(replicate(32b,30)))
field_value = make_array(field_max,/string,value=string(replicate(32b,40)))

end

x1 = 0 
y1 = 0

capendio,time=3., list_time=5.
capendevent,time=0.001

